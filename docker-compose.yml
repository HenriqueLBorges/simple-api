version: '3'
services:
  simple-api:
    container_name: simple-api
    depends_on:
      - kafka
    build: .
    environment:
     - KafkaBootstrapServers=kafka:29092
     - KafkaKeySerializer=org.apache.kafka.common.serialization.StringSerializer
     - KafkaValueSerializer=org.apache.kafka.common.serialization.ByteArraySerializer
     - kafkaTopic=requisitions
     - HostPath=jsonplaceholder.typicode.com
     - UsersPath=/users
     - PORT=8080
     - HOST=0.0.0.0
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail -s -H 'Authorization: Bearer 123' \"http://simple-api:8080/health-check\" || exit 1"
      interval: 1m
      timeout: 5s
      retries: 3

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash-oss:7.5.1
    ports:
      - "5000:5000"
      - "9600:9600"
    volumes: 
      - ${PWD}/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - kafka
      - elasticsearch

  elasticsearch: 
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes: 
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ports: 
      - "9300:9300"
      - "9200:9200"
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.5.1
    depends_on:
      - elasticsearch
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  esdata: